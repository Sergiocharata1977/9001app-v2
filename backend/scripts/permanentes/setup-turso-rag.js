const fs = require('fs');
const path = require('path');

/**
 * Script para configurar el sistema RAG con Turso
 * Este script integra las rutas RAG en el servidor principal
 */

console.log('üöÄ Configurando sistema RAG con Turso...');

// 1. Verificar que existan los archivos necesarios
const requiredFiles = [
  'backend/RAG-System/services/tursoRAGService.ts',
  'backend/RAG-System/controllers/tursoRAGController.ts',
  'backend/RAG-System/routes/tursoRAGRoutes.ts'
];

console.log('üìã Verificando archivos necesarios...');
for (const file of requiredFiles) {
  if (!fs.existsSync(file)) {
    console.error(`‚ùå Archivo faltante: ${file}`);
    process.exit(1);
  }
  console.log(`‚úÖ ${file}`);
}

// 2. Crear archivo de configuraci√≥n de variables de entorno
const envConfig = `
# Configuraci√≥n para Sistema RAG con Turso
TURSO_DATABASE_URL=libsql://isoflow4-sergiocharata1977.turso.io
TURSO_AUTH_TOKEN=tu_token_aqui
OPENAI_API_KEY=tu_openai_api_key_aqui

# Configuraci√≥n adicional para RAG
RAG_MAX_RESULTS=10
RAG_CONTEXT_SIZE=5
RAG_CONFIDENCE_THRESHOLD=60
`;

const envPath = path.join(__dirname, '../../.env.rag');
fs.writeFileSync(envPath, envConfig);
console.log('‚úÖ Archivo de configuraci√≥n .env.rag creado');

// 3. Crear script de migraci√≥n para tabla RAG
const migrationSQL = `
-- Migraci√≥n para tabla RAG_DATA
-- Ejecutar en Turso para habilitar el sistema RAG

CREATE TABLE IF NOT EXISTS rag_data (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tipo TEXT NOT NULL,
    titulo TEXT NOT NULL,
    codigo TEXT,
    contenido TEXT NOT NULL,
    estado TEXT DEFAULT 'activo',
    organizacion_id TEXT,
    fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion DATETIME DEFAULT CURRENT_TIMESTAMP,
    metadata TEXT,
    relevancia_score REAL DEFAULT 0
);

-- √çndices para optimizar b√∫squedas
CREATE INDEX IF NOT EXISTS idx_rag_tipo ON rag_data(tipo);
CREATE INDEX IF NOT EXISTS idx_rag_titulo ON rag_data(titulo);
CREATE INDEX IF NOT EXISTS idx_rag_estado ON rag_data(estado);
CREATE INDEX IF NOT EXISTS idx_rag_organizacion ON rag_data(organizacion_id);
CREATE INDEX IF NOT EXISTS idx_rag_fecha ON rag_data(fecha_actualizacion);

-- Trigger para actualizar fecha_actualizacion
CREATE TRIGGER IF NOT EXISTS update_rag_timestamp 
    AFTER UPDATE ON rag_data
    FOR EACH ROW
BEGIN
    UPDATE rag_data SET fecha_actualizacion = CURRENT_TIMESTAMP WHERE id = NEW.id;
END;

-- Insertar datos de ejemplo
INSERT OR IGNORE INTO rag_data (tipo, titulo, codigo, contenido, organizacion_id) VALUES
('norma', 'ISO 9001:2015 - Requisitos generales', 'ISO-9001-2015', 'La norma ISO 9001:2015 establece los requisitos para un sistema de gesti√≥n de calidad que puede ser utilizado para aplicaci√≥n interna por las organizaciones, para certificaci√≥n o con fines contractuales.', 'default'),
('proceso', 'Proceso de Gesti√≥n de Calidad', 'PROC-001', 'Proceso principal que define c√≥mo la organizaci√≥n gestiona la calidad de sus productos y servicios, incluyendo la planificaci√≥n, implementaci√≥n y mejora continua.', 'default'),
('indicador', 'Indicador de Satisfacci√≥n del Cliente', 'IND-001', 'Medici√≥n de la satisfacci√≥n del cliente basada en encuestas y feedback recibido, con objetivo de mantener un nivel superior al 85%.', 'default'),
('auditoria', 'Auditor√≠a Interna de Calidad', 'AUD-001', 'Proceso de auditor√≠a interna que verifica el cumplimiento del sistema de gesti√≥n de calidad y la efectividad de los procesos implementados.', 'default'),
('hallazgo', 'No Conformidad en Documentaci√≥n', 'HAL-001', 'Hallazgo identificado durante auditor√≠a interna relacionado con documentaci√≥n desactualizada en el proceso de control de calidad.', 'default'),
('accion', 'Acci√≥n Correctiva - Actualizaci√≥n de Documentos', 'ACC-001', 'Acci√≥n correctiva implementada para actualizar toda la documentaci√≥n del sistema de gesti√≥n de calidad y establecer proceso de revisi√≥n peri√≥dica.', 'default'),
('documento', 'Manual de Calidad', 'DOC-001', 'Documento principal que describe el sistema de gesti√≥n de calidad de la organizaci√≥n, incluyendo pol√≠ticas, objetivos y estructura organizacional.', 'default'),
('personal', 'Responsable de Calidad', 'PER-001', 'Descripci√≥n del puesto y responsabilidades del responsable del sistema de gesti√≥n de calidad, incluyendo competencias requeridas.', 'default'),
('capacitacion', 'Capacitaci√≥n en ISO 9001', 'CAP-001', 'Programa de capacitaci√≥n para todo el personal sobre los requisitos de la norma ISO 9001:2015 y su aplicaci√≥n en la organizaci√≥n.', 'default'),
('minuta', 'Reuni√≥n de Revisi√≥n por la Direcci√≥n', 'MIN-001', 'Minuta de la reuni√≥n mensual de revisi√≥n por la direcci√≥n donde se analizan los indicadores de calidad y se toman decisiones de mejora.', 'default');
`;

const migrationPath = path.join(__dirname, '../migrations/20241222_setup_rag_system.sql');
fs.writeFileSync(migrationPath, migrationSQL);
console.log('‚úÖ Script de migraci√≥n RAG creado');

// 4. Crear archivo de integraci√≥n de rutas
const routesIntegration = `
// Integraci√≥n de rutas RAG en el servidor principal
// Agregar en el archivo principal de rutas (app.js o index.js)

import tursoRAGRoutes from './RAG-System/routes/tursoRAGRoutes.js';

// Agregar las rutas RAG
app.use('/api/rag', tursoRAGRoutes);

console.log('‚úÖ Rutas RAG con Turso integradas en /api/rag');
`;

const integrationPath = path.join(__dirname, '../../routes-integration-rag.js');
fs.writeFileSync(integrationPath, routesIntegration);
console.log('‚úÖ Archivo de integraci√≥n de rutas creado');

// 5. Crear documentaci√≥n de uso
const documentation = `
# Sistema RAG con Turso e IA

## Descripci√≥n
Sistema de Retrieval Augmented Generation (RAG) que integra OpenAI con la base de datos Turso para proporcionar respuestas inteligentes sobre el Sistema de Gesti√≥n de Calidad ISO 9001.

## Caracter√≠sticas
- ‚úÖ Consulta RAG con IA (OpenAI GPT-4)
- ‚úÖ B√∫squeda sem√°ntica avanzada
- ‚úÖ An√°lisis de insights y tendencias
- ‚úÖ Sugerencias de consultas relacionadas
- ‚úÖ Estad√≠sticas en tiempo real
- ‚úÖ Integraci√≥n con Turso Database

## Configuraci√≥n

### 1. Variables de Entorno
Agregar al archivo .env:
\`\`\`
TURSO_DATABASE_URL=libsql://isoflow4-sergiocharata1977.turso.io
TURSO_AUTH_TOKEN=tu_token_aqui
OPENAI_API_KEY=tu_openai_api_key_aqui
\`\`\`

### 2. Instalar Dependencias
\`\`\`bash
npm install @libsql/client openai
\`\`\`

### 3. Ejecutar Migraci√≥n
\`\`\`bash
# Conectar a Turso y ejecutar el script de migraci√≥n
npx turso db shell isoflow4 < backend/scripts/migrations/20241222_setup_rag_system.sql
\`\`\`

### 4. Integrar Rutas
Agregar en el archivo principal del servidor:
\`\`\`javascript
import tursoRAGRoutes from './RAG-System/routes/tursoRAGRoutes.js';
app.use('/api/rag', tursoRAGRoutes);
\`\`\`

## Endpoints Disponibles

### POST /api/rag/query
Procesa una consulta RAG con IA
\`\`\`json
{
  "question": "¬øCu√°les son los indicadores de calidad m√°s importantes?",
  "organizationId": "default",
  "maxResults": 10,
  "includeSources": true,
  "contextSize": 5
}
\`\`\`

### GET /api/rag/stats
Obtiene estad√≠sticas del sistema RAG

### GET /api/rag/test-connection
Prueba la conectividad con Turso

### POST /api/rag/semantic-search
B√∫squeda sem√°ntica avanzada
\`\`\`json
{
  "query": "auditor√≠as recientes",
  "filters": { "tipo": "auditoria" },
  "limit": 20
}
\`\`\`

### GET /api/rag/insights
Genera insights y an√°lisis de tendencias

### GET /api/rag/suggestions
Obtiene sugerencias de consultas relacionadas

## Uso en Frontend

### Componente React
\`\`\`tsx
import { TursoRAGChat } from './components/assistant/TursoRAGChat';

function App() {
  return (
    <div className="h-screen">
      <TursoRAGChat />
    </div>
  );
}
\`\`\`

### Ejemplo de Consulta
\`\`\`javascript
const response = await fetch('/api/rag/query', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': \`Bearer \${token}\`
  },
  body: JSON.stringify({
    question: '¬øCu√°les son los procesos principales del SGC?',
    maxResults: 5,
    includeSources: true
  })
});

const data = await response.json();
console.log(data.data.answer);
\`\`\`

## Tipos de Datos Soportados
- normas: Normas ISO y est√°ndares
- procesos: Procesos del SGC
- indicadores: Indicadores de calidad
- auditorias: Auditor√≠as internas y externas
- hallazgos: No conformidades y hallazgos
- acciones: Acciones correctivas y preventivas
- documentos: Documentaci√≥n del SGC
- personal: Personal y responsabilidades
- capacitaciones: Programas de capacitaci√≥n
- minutas: Minutas de reuniones

## Monitoreo y Mantenimiento

### Verificar Estado del Sistema
\`\`\`bash
curl -H "Authorization: Bearer \${token}" http://localhost:3000/api/rag/health
\`\`\`

### Estad√≠sticas del Sistema
\`\`\`bash
curl -H "Authorization: Bearer \${token}" http://localhost:3000/api/rag/stats
\`\`\`

### Prueba de Conectividad
\`\`\`bash
curl -H "Authorization: Bearer \${token}" http://localhost:3000/api/rag/test-connection
\`\`\`

## Troubleshooting

### Error de Conexi√≥n con Turso
1. Verificar TURSO_DATABASE_URL y TURSO_AUTH_TOKEN
2. Comprobar conectividad de red
3. Verificar permisos de la base de datos

### Error de OpenAI
1. Verificar OPENAI_API_KEY
2. Comprobar l√≠mites de uso de la API
3. Verificar conectividad a OpenAI

### Baja Confianza en Respuestas
1. Revisar calidad de datos en Turso
2. Ajustar par√°metros de b√∫squeda
3. Mejorar estructura de datos RAG

## Mejoras Futuras
- [ ] Vectorizaci√≥n de embeddings
- [ ] Cache inteligente de respuestas
- [ ] An√°lisis de sentimientos
- [ ] Integraci√≥n con m√°s modelos de IA
- [ ] Dashboard de analytics avanzado
`;

const docsPath = path.join(__dirname, '../../docs-esenciales/SISTEMA_RAG_TURSO.md');
fs.writeFileSync(docsPath, documentation);
console.log('‚úÖ Documentaci√≥n del sistema RAG creada');

// 6. Crear script de prueba
const testScript = `
// Script de prueba para el sistema RAG
const testRAGSystem = async () => {
  console.log('üß™ Probando sistema RAG con Turso...');
  
  const testQueries = [
    '¬øCu√°les son los indicadores de calidad m√°s importantes?',
    'Mu√©strame los procesos del sistema de gesti√≥n de calidad',
    '¬øQu√© auditor√≠as se han realizado recientemente?',
    'Cu√°les son las acciones correctivas pendientes',
    '¬øQu√© capacitaciones est√°n programadas?'
  ];
  
  for (const query of testQueries) {
    try {
      console.log(\`\\nüìù Probando: "\${query}"\`);
      
      const response = await fetch('http://localhost:3000/api/rag/query', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': \`Bearer \${process.env.TEST_TOKEN || 'test'}\`
        },
        body: JSON.stringify({
          question: query,
          maxResults: 5,
          includeSources: true
        })
      });
      
      if (response.ok) {
        const data = await response.json();
        console.log(\`‚úÖ Respuesta: \${data.data.answer.substring(0, 100)}...\`);
        console.log(\`üìä Confianza: \${data.data.confidence}%\`);
        console.log(\`‚è±Ô∏è Tiempo: \${data.data.processingTime}ms\`);
      } else {
        console.log(\`‚ùå Error: \${response.status}\`);
      }
    } catch (error) {
      console.log(\`‚ùå Error: \${error.message}\`);
    }
  }
  
  console.log('\\nüéâ Pruebas completadas');
};

// Ejecutar si es llamado directamente
if (require.main === module) {
  testRAGSystem();
}

module.exports = { testRAGSystem };
`;

const testPath = path.join(__dirname, '../temporales/test-rag-system.js');
fs.writeFileSync(testPath, testScript);
console.log('‚úÖ Script de prueba RAG creado');

console.log('\nüéâ Configuraci√≥n del sistema RAG con Turso completada!');
console.log('\nüìã Pr√≥ximos pasos:');
console.log('1. Configurar variables de entorno en .env');
console.log('2. Instalar dependencias: npm install @libsql/client openai');
console.log('3. Ejecutar migraci√≥n en Turso');
console.log('4. Integrar rutas en el servidor principal');
console.log('5. Probar el sistema con el script de prueba');
console.log('\nüìö Documentaci√≥n disponible en: docs-esenciales/SISTEMA_RAG_TURSO.md');
